name: Publish Release

on:
  workflow_call:
    inputs:
      package-name:
        required: true
        type: string
      package-org:
        required: true
        type: string
      ballerina-bot-username:
        required: true
        type: string
      ballerina-bot-email:
        required: true
        type: string
      ballerina-bot-token:
        required: true
        type: string
      ballerina-central-access-token:
        required: true
        type: string
      additional-build-flags:
        required: false
        type: string
        default: ""
      additional-publish-flags:
        required: false
        type: string
        default: ""

jobs:
  publish-release:
    name: Release Package
    runs-on: ubuntu-latest
    if: github.repository_owner == 'ballerina-platform'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17.0.7

      - name: Build without Tests
        env:
          packageUser: ${{ github.actor }}
          packagePAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name ${{ inputs.ballerina-bot-username }}
          git config --global user.email ${{ inputs.ballerina-bot-email }}
          ./gradlew build -x check -x test ${{ inputs.additional-build-flags }}

      - name: Create lib Directory if not Exists
        run: mkdir -p ballerina/lib

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "rootfs"
          scan-ref: "/github/workspace/ballerina/lib"
          format: "table"
          timeout: "10m0s"
          exit-code: "1"

      - name: Get Release Version
        run: echo "VERSION=$((grep -w 'version' | cut -d= -f2) < gradle.properties | rev | cut --complement -d- -f1 | rev)" >> $GITHUB_ENV

      - name: Pre-Release Dependency Version Update
        env:
          GITHUB_TOKEN: ${{ inputs.ballernia-bot-token }}
        run: |
          echo "Version: ${VERSION}"
          git checkout -b release-${VERSION}
          sed -i 's/ballerinaLangVersion=\(.*\)-SNAPSHOT/ballerinaLangVersion=\1/g' gradle.properties
          sed -i 's/ballerinaLangVersion=\(.*\)-[0-9]\{8\}-[0-9]\{6\}-.*$/ballerinaLangVersion=\1/g' gradle.properties
          sed -i 's/stdlib\(.*\)=\(.*\)-SNAPSHOT/stdlib\1=\2/g' gradle.properties
          sed -i 's/stdlib\(.*\)=\(.*\)-[0-9]\{8\}-[0-9]\{6\}-.*$/stdlib\1=\2/g' gradle.properties
          sed -i 's/observe\(.*\)=\(.*\)-SNAPSHOT/observe\1=\2/g' gradle.properties
          sed -i 's/observe\(.*\)=\(.*\)-[0-9]\{8\}-[0-9]\{6\}-.*$/observe\1=\2/g' gradle.properties
          git add gradle.properties
          git commit -m "Move dependencies to stable versions" || echo "No changes to commit"

      - name: Publish Package
        env:
          GITHUB_TOKEN: ${{ inputs.ballerina-bot-token }}
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ inputs.ballerina-central-access-token }}
          packageUser: ${{ inputs.ballerina-bot-username }}
          packagePAT: ${{ inputs.ballerina-bot-token }}
          publishUser: ${{ inputs.ballerina-bot-username }}
          publishPAT: ${{ inputs.ballerina-bot-token }}
        run: |
          ./gradlew clean release -Prelease.useAutomaticVersion=true
          ./gradlew -Pversion=${VERSION} publish -x test -PpublishToCentral=true ${{ inputs.additional-publish-flags }}

      - name: GitHub Release and Release Sync PR
        env:
          GITHUB_TOKEN: ${{ inputs.ballerina-bot-token }}
        run: |
          gh release create v$VERSION --title "module-${{ inputs.package-org }}-${{ inputs.package-name }}-v$VERSION"
          gh pr create --title "[Automated] Sync master after $VERSION release" --body "Sync master after $VERSION release"
